# Generated by Django 4.2.4 on 2023-11-27 18:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricule', models.CharField(blank=True, default=False, max_length=50)),
                ('profile', models.ImageField(default=False, upload_to='static/img')),
                ('age', models.IntegerField(blank=True, default=False, null=True)),
                ('nationnalite', models.CharField(blank=True, default=False, max_length=200)),
                ('genre', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], default=False, max_length=20)),
                ('CNI', models.ImageField(default=False, upload_to='static/img')),
                ('telephone', models.CharField(blank=True, default=False, max_length=200)),
                ('handicap', models.CharField(blank=True, default=False, max_length=200)),
                ('is_terrain', models.BooleanField(blank=True, default=False)),
                ('is_motoman', models.BooleanField(blank=True, default=False)),
                ('syndicat', models.CharField(blank=True, default=False, max_length=50)),
                ('heure_Travaille', models.CharField(blank=True, choices=[('jours', 'Jours'), ('nuit', 'Nuit'), ('jours_nuit', 'Jours et Nuit')], default=False, max_length=20)),
                ('photo_moto', models.ImageField(default=False, upload_to='static/img')),
                ('carte_grise', models.ImageField(default=False, upload_to='static/img')),
                ('recu_vente', models.ImageField(default=False, upload_to='static/img')),
                ('assurance', models.ImageField(default=False, upload_to='static/img')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rapport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('note', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('heure', models.DateTimeField(auto_now_add=True)),
                ('envoyeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports_envoyes', to=settings.AUTH_USER_MODEL)),
                ('receveur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports_recus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(default=False)),
                ('longitude', models.FloatField(default=False)),
                ('localite', models.CharField(default=False, max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('point', models.IntegerField()),
                ('debut', models.DateTimeField()),
                ('fin', models.DateTimeField()),
                ('encours', models.BooleanField(default=True)),
                ('terminer', models.BooleanField(default=False)),
                ('reussie', models.BooleanField(default=True)),
                ('echecs', models.BooleanField(default=False)),
                ('envoyeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='misssion_envoyeur', to=settings.AUTH_USER_MODEL)),
                ('receveur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mission_recus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('heure', models.DateTimeField(auto_now_add=True)),
                ('envoyeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesage_envoyeur', to=settings.AUTH_USER_MODEL)),
                ('receveur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_recus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoriqueConnexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_connexion', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
